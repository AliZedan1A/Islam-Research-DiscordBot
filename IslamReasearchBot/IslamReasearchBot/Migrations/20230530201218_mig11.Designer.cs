// <auto-generated />
using System;
using IslamReasearchBot.DataModules;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IslamReasearchBot.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20230530201218_mig11")]
    partial class mig11
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("IslamReasearchBot.DataModules.AdminsModule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ServerId")
                        .HasMaxLength(20)
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UserId")
                        .HasMaxLength(20)
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("ServersAdmins");
                });

            modelBuilder.Entity("IslamReasearchBot.DataModules.CatigoryIdsModule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("CatigoryId")
                        .HasMaxLength(20)
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ServerId")
                        .HasMaxLength(20)
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("ServersCatigory");
                });

            modelBuilder.Entity("IslamReasearchBot.DataModules.ImagesModualDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ResarchID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ResarchImages");
                });

            modelBuilder.Entity("IslamReasearchBot.DataModules.ServerConfigrationModuel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ServerID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("ServersConfig");
                });

            modelBuilder.Entity("IslamReasearchBot.DataModules.ServersLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("ServerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("UserSheredID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ServerLog");
                });
#pragma warning restore 612, 618
        }
    }
}
